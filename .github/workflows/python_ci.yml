name: CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: check commit message format
      run: |
        # Get Commit Message
        last_commit_log=$(git log -1 --pretty=format:"%s")
        echo "last commit log: $last_commit_log"

        feat="[#[0-9]+][[:space:]]feat:[[:space:]].*$"
        fix="fix:[[:space:]].*$"
        test="test:[[:space:]].*$"
        chore="chore:[[:space:]].*$"
        merge="Merge pull request.*$"
        doc="doc:[[:space:]].*$"

        commit_msg_reg=(
          $feat
          $fix
          $test
          $chore
          $merge
          $doc
        )

        check_commit_msg() {
          for regex in ${commit_msg_reg[*]}
            do
              echo "last commit log: $last_commit_log"
              echo "$regex"
              if [[ $last_commit_log =~ $regex ]]; then
                printf "do match \n\n  $last_commit_log  $regex"
                return 0
              else
                printf "does not match $last_commit_log  $regex"
              fi
            done
          return 1
        }

        check_commit_msg
        if [[ $? == 1 ]]
        then
          printf "\n\n $last_commit_log  commit message failed match"
          exit 1
        fi
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --ignore=E203,F405 --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m pytest --cov-report=xml --cov=./tests/
